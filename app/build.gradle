plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
}

android {

    compileSdk 31

    defaultConfig {
        applicationId "com.virgiliosolano.moviedb"
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "1.0"
        buildConfigField("String", "TMDB_API_KEY", "\"${getProperty("local.properties", "movieApiKey")}\"")
        buildConfigField("String", "TMDB_POSTER_URL", "\"" + "https://image.tmdb.org/t/p/original/" + "\"")
        buildConfigField("String", "TMDB_POSTER_MEDIUM_URL", "\"" + "https://image.tmdb.org/t/p/w500" + "\"")
        buildConfigField("String", "TMDB_BASE_URL", "\"" + "https://api.themoviedb.org/3/" + "\"")

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    kapt {
        javacOptions {
            option("-Adagger.fastInit=ENABLED")
            option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
        }
    }
}

dependencies {
    // Design & Layout
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.cardview:cardview:1.0.0'

    // Kotlin
    def activity_version = "1.4.0"
    implementation "androidx.activity:activity-ktx:$activity_version"

    // Lifecycle
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Room
    implementation "androidx.room:room-runtime:2.2.5"
    kapt "androidx.room:room-compiler:2.2.5"
    implementation "androidx.room:room-ktx:2.2.5"

    // Hilt dependency & ViewModel
    def hilt_retrofit = "2.40.1"
    implementation "com.google.dagger:hilt-android:$hilt_retrofit"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_retrofit"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // OkHttp
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.0"))
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    //Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // Tests
    testImplementation 'junit:junit:4.+'
    testImplementation("com.squareup.okhttp3:mockwebserver:4.9.0")
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename)
        }
    } else {
        print(filename + " does not exist!")
    }
}